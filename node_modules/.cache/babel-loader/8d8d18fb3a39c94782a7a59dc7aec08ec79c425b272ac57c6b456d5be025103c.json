{"ast":null,"code":"var _jsxFileName = \"/Users/scottyd/Code/trainfuel_cleaned/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Calendar, Activity, Download, RefreshCw } from 'lucide-react';\nimport stravaService from './services/stravaService';\nimport nutritionService from './services/nutritionService';\nimport { processStravaActivities, calculateWeeklyTSS, analyzeTrainingPhase } from './utils/trainingUtils';\nimport { determineWorkoutType, getPrimaryFocus, getMainWorkout, calculateTargetRPE, getWorkoutRationale } from './utils/workoutUtils';\nimport ErrorBoundary from './ErrorBoundary';\nimport StravaAuth from './components/StravaAuth';\nimport DashboardView from './components/DashboardView';\nimport CalendarView from './components/CalendarView';\nimport SettingsView from './components/SettingsView';\nimport AddEventModal from './components/AddEventModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst saveEventsToStorage = events => {\n  try {\n    localStorage.setItem('upcoming_events', JSON.stringify(events));\n  } catch (error) {\n    console.error('Error saving events to localStorage:', error);\n  }\n};\nconst loadEventsFromStorage = () => {\n  try {\n    const savedEvents = localStorage.getItem('upcoming_events');\n    if (savedEvents) return JSON.parse(savedEvents);\n  } catch (error) {\n    console.error('Error loading events from localStorage:', error);\n  }\n  return [];\n};\nconst App = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [lastSync, setLastSync] = useState(new Date());\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [athlete, setAthlete] = useState(null);\n  const [activities, setActivities] = useState([]);\n  const [trainingData, setTrainingData] = useState(null);\n  const [seasonType, setSeasonType] = useState('in-season');\n  const [upcomingEvents, setUpcomingEvents] = useState(() => loadEventsFromStorage());\n  const [dailyNutrition, setDailyNutrition] = useState(null);\n  const [dailyWorkout, setDailyWorkout] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [nutritionPlan, setNutritionPlan] = useState(null);\n  const [generatingNutrition, setGeneratingNutrition] = useState(false);\n  const [mealPlan, setMealPlan] = useState(null);\n  const [trainingGoal, setTrainingGoal] = useState('Endurance Performance');\n  const [dietaryRestrictions, setDietaryRestrictions] = useState('');\n  const [showAddEventModal, setShowAddEventModal] = useState(false);\n  useEffect(() => {\n    saveEventsToStorage(upcomingEvents);\n  }, [upcomingEvents]);\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (stravaService.isAuthenticated()) {\n        setIsAuthenticated(true);\n        await loadStravaData();\n      }\n    };\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n    if (code) {\n      handleStravaCallback(code);\n    } else {\n      checkAuth();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    if (trainingData && athlete) {\n      generateDailyNutrition();\n      generateDailyWorkout();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [seasonType, trainingData === null || trainingData === void 0 ? void 0 : trainingData.todaysActivity, upcomingEvents]);\n  const handleStravaCallback = async code => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await stravaService.exchangeToken(code);\n      setIsAuthenticated(true);\n      setAthlete(result.athlete);\n      window.history.replaceState({}, document.title, window.location.pathname);\n      await loadStravaData();\n    } catch (err) {\n      console.error('Error during Strava authentication:', err);\n      setError(`Failed to connect to Strava: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadStravaData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      if (!athlete) {\n        const athleteData = await stravaService.getAthlete();\n        setAthlete(athleteData);\n      }\n      const recentActivities = await stravaService.getActivities(1, 30);\n      const processedActivities = processStravaActivities(recentActivities);\n      setActivities(processedActivities);\n      const weeklyTSS = calculateWeeklyTSS(processedActivities);\n      const currentPhase = analyzeTrainingPhase(processedActivities);\n      const todaysActivity = processedActivities.find(activity => activity.date === new Date().toISOString().split('T')[0]) || processedActivities[0];\n      setTrainingData({\n        currentPhase,\n        weeklyTSS,\n        todaysActivity: todaysActivity || {\n          type: 'Rest Day',\n          duration: 0,\n          intensity: 'Rest',\n          tss: 0\n        },\n        upcomingActivities: processedActivities.slice(1, 4)\n      });\n      setLastSync(new Date());\n      await generateNutritionPlan();\n    } catch (err) {\n      console.error('Error loading Strava data:', err);\n      setError('Failed to load training data. Please try refreshing.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const generateNutritionPlan = async () => {\n    if (!trainingData || !athlete) return;\n    setGeneratingNutrition(true);\n    try {\n      const userData = {\n        athlete,\n        trainingData,\n        activities,\n        upcomingEvents,\n        preferences: {\n          weight: athlete.weight || 70,\n          age: 35,\n          height: 175,\n          trainingGoal,\n          dietaryRestrictions\n        }\n      };\n      const plan = await nutritionService.generateNutritionPlan(userData);\n      setNutritionPlan(plan);\n    } catch (err) {\n      console.error('Error generating nutrition plan:', err);\n      setNutritionPlan({\n        dailyCalories: 3200,\n        macros: {\n          carbs: {\n            grams: 480,\n            percentage: 60\n          },\n          protein: {\n            grams: 160,\n            percentage: 20\n          },\n          fat: {\n            grams: 71,\n            percentage: 20\n          }\n        },\n        hydration: {\n          dailyTarget: 3500\n        },\n        workoutNutrition: {\n          preWorkout: 'Banana + Coffee (1hr before)',\n          duringWorkout: 'Sports drink (60g carbs/hr)',\n          postWorkout: 'Recovery shake within 30min'\n        }\n      });\n    } finally {\n      setGeneratingNutrition(false);\n    }\n  };\n  const generateMealPlan = async () => {\n    if (!nutritionPlan || !trainingData) return;\n    setGeneratingNutrition(true);\n    try {\n      const userData = {\n        athlete,\n        trainingData,\n        activities,\n        preferences: {\n          dietaryRestrictions,\n          cookingSkill: 'Intermediate'\n        }\n      };\n      const weeklyPlan = await nutritionService.generateWeeklyMealPlan(userData, nutritionPlan);\n      setMealPlan(weeklyPlan);\n    } catch (err) {\n      console.error('Error generating meal plan:', err);\n    } finally {\n      setGeneratingNutrition(false);\n    }\n  };\n  const generateDailyNutrition = async () => {\n    setGeneratingNutrition(true);\n    try {\n      var _upcomingEvents$, _upcomingEvents$2, _upcomingEvents$3;\n      const currentTrainingData = trainingData || {\n        currentPhase: 'Base',\n        weeklyTSS: 0,\n        todaysActivity: {\n          type: 'Rest Day',\n          duration: 0,\n          intensity: 'Rest',\n          tss: 0\n        }\n      };\n      const currentAthlete = athlete || {\n        weight: 70,\n        firstname: 'User'\n      };\n      const response = {\n        preWorkout: {\n          timing: \"1-2 hours before\",\n          meal: seasonType === 'in-season' ? `Oatmeal with banana and honey, coffee with ${currentTrainingData.todaysActivity.intensity === 'High' ? 'extra carbs' : 'normal prep'}` : \"Light toast with honey and coffee\",\n          rationale: `Given your ${currentTrainingData.todaysActivity.intensity.toLowerCase()} intensity ${currentTrainingData.todaysActivity.type.toLowerCase()} session, you need ${currentTrainingData.todaysActivity.intensity === 'High' ? 'easily digestible carbs for quick energy' : 'moderate fuel to avoid heaviness'}.`\n        },\n        duringWorkout: {\n          timing: \"Every 20-30 minutes during exercise\",\n          fuel: currentTrainingData.todaysActivity.duration > 60 ? \"Sports drink targeting 60g carbs/hour\" : currentTrainingData.todaysActivity.duration > 0 ? \"Water with electrolytes - session duration doesn't require carbs\" : \"Rest day - focus on hydration throughout the day\",\n          rationale: currentTrainingData.todaysActivity.duration > 60 ? `For ${currentTrainingData.todaysActivity.duration}min at ${currentTrainingData.todaysActivity.intensity.toLowerCase()} intensity, you need carb replenishment to maintain power.` : currentTrainingData.todaysActivity.duration > 0 ? `For ${currentTrainingData.todaysActivity.duration}min session, focus on hydration and electrolyte balance.` : \"Rest day allows focus on overall hydration and recovery nutrition.\"\n        },\n        postWorkout: {\n          timing: \"Within 30 minutes\",\n          meal: currentTrainingData.todaysActivity.tss > 70 ? \"Protein shake with extra carbs + fruit\" : currentTrainingData.todaysActivity.tss > 0 ? \"Protein shake with moderate carbs + fruit\" : \"Focus on balanced meals throughout the day\",\n          rationale: currentTrainingData.todaysActivity.tss > 70 ? `With TSS ${currentTrainingData.todaysActivity.tss}, prioritize glycogen replenishment and protein synthesis.` : currentTrainingData.todaysActivity.tss > 0 ? `With TSS ${currentTrainingData.todaysActivity.tss}, focus on protein for recovery without excess calories.` : \"Rest day nutrition focuses on steady nutrient intake and recovery preparation.\"\n        },\n        dinnerSuggestion: {\n          meal: seasonType === 'in-season' ? `Lean protein (salmon/chicken), quinoa, roasted vegetables - sized for ${currentTrainingData.currentPhase} phase` : \"Balanced meal with emphasis on anti-inflammatory foods\",\n          rationale: `Supporting ${currentTrainingData.currentPhase} training phase while maintaining consistency for ${upcomingEvents.length > 0 ? 'upcoming events' : 'general fitness'}.`\n        },\n        hydrationGoal: `${Math.round(35 * (currentAthlete.weight || 70))}ml base + ${Math.round(currentTrainingData.todaysActivity.duration * 8)}ml during training`,\n        racePrep: upcomingEvents.length > 0 ? `With ${(_upcomingEvents$ = upcomingEvents[0]) === null || _upcomingEvents$ === void 0 ? void 0 : _upcomingEvents$.name} in ${(_upcomingEvents$2 = upcomingEvents[0]) === null || _upcomingEvents$2 === void 0 ? void 0 : _upcomingEvents$2.weeksOut} weeks, ${((_upcomingEvents$3 = upcomingEvents[0]) === null || _upcomingEvents$3 === void 0 ? void 0 : _upcomingEvents$3.weeksOut) <= 3 ? 'lock in race nutrition - no experiments' : 'good time to test race-day nutrition strategies'}.` : \"No upcoming events - focus on consistent daily nutrition habits\"\n      };\n      setDailyNutrition(response);\n    } catch (err) {\n      console.error('Error generating daily nutrition:', err);\n    } finally {\n      setGeneratingNutrition(false);\n    }\n  };\n  const generateDailyWorkout = async () => {\n    setGeneratingNutrition(true);\n    try {\n      const currentActivities = activities.length > 0 ? activities : [];\n      const currentTrainingData = trainingData || {\n        currentPhase: 'Base',\n        weeklyTSS: 0,\n        todaysActivity: {\n          type: 'Base Endurance',\n          duration: 45,\n          intensity: 'Moderate',\n          tss: 35\n        }\n      };\n      const response = {\n        workoutType: determineWorkoutType(currentActivities, seasonType),\n        primaryFocus: getPrimaryFocus(upcomingEvents),\n        warmup: {\n          duration: \"15 minutes\",\n          description: seasonType === 'in-season' ? \"Dynamic warm-up with sport-specific movements, gradually increasing intensity\" : \"Easy 15min with 4x30sec pickups in final 5min\"\n        },\n        mainSet: getMainWorkout(currentActivities, seasonType, upcomingEvents),\n        cooldown: {\n          duration: \"10-15 minutes\",\n          description: \"Easy spin/walk with 5min of stretching focus on hip flexors and calves\"\n        },\n        alternatives: [\"If feeling fatigued: Convert to easy recovery session\", seasonType === 'in-season' ? \"If race week: Reduce intensity by 20%\" : \"If time-crunched: Focus on main set only\"],\n        rpe: calculateTargetRPE(currentActivities, seasonType),\n        rationale: getWorkoutRationale(currentActivities, upcomingEvents, currentTrainingData)\n      };\n      setDailyWorkout(response);\n    } catch (err) {\n      console.error('Error generating daily workout:', err);\n    } finally {\n      setGeneratingNutrition(false);\n    }\n  };\n  const handleConnectStrava = () => {\n    window.location.href = stravaService.getAuthUrl();\n  };\n  const handleDisconnectStrava = () => {\n    stravaService.logout();\n    setIsAuthenticated(false);\n    setAthlete(null);\n    setActivities([]);\n    setTrainingData(null);\n    setNutritionPlan(null);\n    setMealPlan(null);\n    setTrainingGoal('Endurance Performance');\n    setDietaryRestrictions('');\n  };\n  const handleRefresh = async () => {\n    if (isAuthenticated) await loadStravaData();\n  };\n  const handleRegenerateNutrition = async () => {\n    await generateNutritionPlan();\n  };\n  const handleTrainingGoalChange = async newGoal => {\n    setTrainingGoal(newGoal);\n    if (trainingData && athlete) {\n      setGeneratingNutrition(true);\n      setTimeout(async () => {\n        await generateNutritionPlan();\n        setGeneratingNutrition(false);\n      }, 500);\n    }\n  };\n  const handleDietaryRestrictionsChange = async restrictions => {\n    setDietaryRestrictions(restrictions);\n    if (trainingData && athlete && nutritionPlan) await generateNutritionPlan();\n  };\n  const clearAllEvents = () => {\n    setUpcomingEvents([]);\n    localStorage.removeItem('upcoming_events');\n  };\n  const addEvent = event => {\n    setUpcomingEvents(prev => [...prev, event].sort((a, b) => a.weeksOut - b.weeksOut));\n    if (trainingData && athlete) {\n      generateDailyNutrition();\n      generateDailyWorkout();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-50\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"bg-white shadow-sm border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-between items-center py-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center space-x-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bg-blue-500 w-10 h-10 rounded-lg flex items-center justify-center\",\n                  children: /*#__PURE__*/_jsxDEV(Activity, {\n                    className: \"h-6 w-6 text-white\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                    className: \"text-2xl font-bold text-gray-900\",\n                    children: \"TrainFuel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-600\",\n                    children: \"AI-Powered Sports Nutrition\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), isAuthenticated && athlete && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"hidden sm:block text-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-gray-600\",\n                  children: [\"Welcome back, \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-medium text-gray-900\",\n                    children: athlete.firstname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 64\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-xs text-gray-500\",\n                  children: [\"Last sync: \", lastSync.toLocaleTimeString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-3\",\n              children: [isAuthenticated && /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleRefresh,\n                disabled: loading,\n                className: \"flex items-center space-x-2 text-gray-600 hover:text-gray-900 px-3 py-2 rounded-lg hover:bg-gray-100\",\n                children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n                  className: `h-4 w-4 ${loading ? 'animate-spin' : ''}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-sm\",\n                  children: loading ? 'Syncing...' : 'Sync Data'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"flex items-center space-x-2 bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors\",\n                children: [/*#__PURE__*/_jsxDEV(Download, {\n                  className: \"h-4 w-4\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Export Plan\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"bg-white border-b border-gray-200\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex space-x-8\",\n            children: [{\n              id: 'dashboard',\n              label: 'Dashboard',\n              icon: Activity\n            }, {\n              id: 'calendar',\n              label: 'Activities',\n              icon: Calendar\n            }, {\n              id: 'settings',\n              label: 'Settings',\n              icon: Activity\n            }].map(({\n              id,\n              label,\n              icon: Icon\n            }) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setActiveTab(id),\n              className: `flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm ${activeTab === id ? 'border-blue-500 text-blue-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`,\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                className: \"h-4 w-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 47\n              }, this)]\n            }, id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\",\n        children: [!isAuthenticated && /*#__PURE__*/_jsxDEV(StravaAuth, {\n          onConnect: handleConnectStrava,\n          loading: loading,\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 32\n        }, this), activeTab === 'dashboard' && /*#__PURE__*/_jsxDEV(DashboardView, {\n          isAuthenticated: isAuthenticated,\n          loading: loading,\n          trainingData: trainingData,\n          nutritionPlan: nutritionPlan,\n          dailyNutrition: dailyNutrition,\n          dailyWorkout: dailyWorkout,\n          generatingNutrition: generatingNutrition,\n          handleGenerateNutrition: generateDailyNutrition,\n          handleGenerateWorkout: generateDailyWorkout,\n          upcomingEvents: upcomingEvents,\n          setShowAddEventModal: setShowAddEventModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this), activeTab === 'calendar' && /*#__PURE__*/_jsxDEV(CalendarView, {\n          isAuthenticated: isAuthenticated,\n          activities: activities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 40\n        }, this), activeTab === 'settings' && /*#__PURE__*/_jsxDEV(SettingsView, {\n          isAuthenticated: isAuthenticated,\n          athlete: athlete,\n          trainingGoal: trainingGoal,\n          onTrainingGoalChange: handleTrainingGoalChange,\n          dietaryRestrictions: dietaryRestrictions,\n          onDietaryRestrictionsChange: handleDietaryRestrictionsChange,\n          seasonType: seasonType,\n          onSeasonTypeChange: setSeasonType,\n          lastSync: lastSync,\n          upcomingEvents: upcomingEvents,\n          onClearAllEvents: clearAllEvents,\n          onRefresh: handleRefresh\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AddEventModal, {\n          show: showAddEventModal,\n          onClose: () => setShowAddEventModal(false),\n          onAddEvent: addEvent,\n          minDate: new Date().toISOString().split('T')[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"1uNzlk92f03kWs48MMJmBYM7ih0=\");\n_c = App;\nApp.propTypes = {};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","Calendar","Activity","Download","RefreshCw","stravaService","nutritionService","processStravaActivities","calculateWeeklyTSS","analyzeTrainingPhase","determineWorkoutType","getPrimaryFocus","getMainWorkout","calculateTargetRPE","getWorkoutRationale","ErrorBoundary","StravaAuth","DashboardView","CalendarView","SettingsView","AddEventModal","jsxDEV","_jsxDEV","saveEventsToStorage","events","localStorage","setItem","JSON","stringify","error","console","loadEventsFromStorage","savedEvents","getItem","parse","App","_s","activeTab","setActiveTab","lastSync","setLastSync","Date","isAuthenticated","setIsAuthenticated","athlete","setAthlete","activities","setActivities","trainingData","setTrainingData","seasonType","setSeasonType","upcomingEvents","setUpcomingEvents","dailyNutrition","setDailyNutrition","dailyWorkout","setDailyWorkout","loading","setLoading","setError","nutritionPlan","setNutritionPlan","generatingNutrition","setGeneratingNutrition","mealPlan","setMealPlan","trainingGoal","setTrainingGoal","dietaryRestrictions","setDietaryRestrictions","showAddEventModal","setShowAddEventModal","checkAuth","loadStravaData","urlParams","URLSearchParams","window","location","search","code","get","handleStravaCallback","generateDailyNutrition","generateDailyWorkout","todaysActivity","result","exchangeToken","history","replaceState","document","title","pathname","err","message","athleteData","getAthlete","recentActivities","getActivities","processedActivities","weeklyTSS","currentPhase","find","activity","date","toISOString","split","type","duration","intensity","tss","upcomingActivities","slice","generateNutritionPlan","userData","preferences","weight","age","height","plan","dailyCalories","macros","carbs","grams","percentage","protein","fat","hydration","dailyTarget","workoutNutrition","preWorkout","duringWorkout","postWorkout","generateMealPlan","cookingSkill","weeklyPlan","generateWeeklyMealPlan","_upcomingEvents$","_upcomingEvents$2","_upcomingEvents$3","currentTrainingData","currentAthlete","firstname","response","timing","meal","rationale","toLowerCase","fuel","dinnerSuggestion","length","hydrationGoal","Math","round","racePrep","name","weeksOut","currentActivities","workoutType","primaryFocus","warmup","description","mainSet","cooldown","alternatives","rpe","handleConnectStrava","href","getAuthUrl","handleDisconnectStrava","logout","handleRefresh","handleRegenerateNutrition","handleTrainingGoalChange","newGoal","setTimeout","handleDietaryRestrictionsChange","restrictions","clearAllEvents","removeItem","addEvent","event","prev","sort","a","b","children","className","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleTimeString","onClick","disabled","id","label","icon","map","Icon","onConnect","handleGenerateNutrition","handleGenerateWorkout","onTrainingGoalChange","onDietaryRestrictionsChange","onSeasonTypeChange","onClearAllEvents","onRefresh","show","onClose","onAddEvent","minDate","_c","propTypes","$RefreshReg$"],"sources":["/Users/scottyd/Code/trainfuel_cleaned/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Calendar, Activity, Download, RefreshCw } from 'lucide-react';\nimport stravaService from './services/stravaService';\nimport nutritionService from './services/nutritionService';\nimport { processStravaActivities, calculateWeeklyTSS, analyzeTrainingPhase } from './utils/trainingUtils';\nimport { determineWorkoutType, getPrimaryFocus, getMainWorkout, calculateTargetRPE, getWorkoutRationale } from './utils/workoutUtils';\nimport ErrorBoundary from './ErrorBoundary';\nimport StravaAuth from './components/StravaAuth';\nimport DashboardView from './components/DashboardView';\nimport CalendarView from './components/CalendarView';\nimport SettingsView from './components/SettingsView';\nimport AddEventModal from './components/AddEventModal';\n\nconst saveEventsToStorage = (events) => {\n  try {\n    localStorage.setItem('upcoming_events', JSON.stringify(events));\n  } catch (error) {\n    console.error('Error saving events to localStorage:', error);\n  }\n};\n\nconst loadEventsFromStorage = () => {\n  try {\n    const savedEvents = localStorage.getItem('upcoming_events');\n    if (savedEvents) return JSON.parse(savedEvents);\n  } catch (error) {\n    console.error('Error loading events from localStorage:', error);\n  }\n  return [];\n};\n\nconst App = () => {\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [lastSync, setLastSync] = useState(new Date());\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [athlete, setAthlete] = useState(null);\n  const [activities, setActivities] = useState([]);\n  const [trainingData, setTrainingData] = useState(null);\n  const [seasonType, setSeasonType] = useState('in-season');\n  const [upcomingEvents, setUpcomingEvents] = useState(() => loadEventsFromStorage());\n  const [dailyNutrition, setDailyNutrition] = useState(null);\n  const [dailyWorkout, setDailyWorkout] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [nutritionPlan, setNutritionPlan] = useState(null);\n  const [generatingNutrition, setGeneratingNutrition] = useState(false);\n  const [mealPlan, setMealPlan] = useState(null);\n  const [trainingGoal, setTrainingGoal] = useState('Endurance Performance');\n  const [dietaryRestrictions, setDietaryRestrictions] = useState('');\n  const [showAddEventModal, setShowAddEventModal] = useState(false);\n\n  useEffect(() => { saveEventsToStorage(upcomingEvents); }, [upcomingEvents]);\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (stravaService.isAuthenticated()) {\n        setIsAuthenticated(true);\n        await loadStravaData();\n      }\n    };\n\n    const urlParams = new URLSearchParams(window.location.search);\n    const code = urlParams.get('code');\n\n    if (code) {\n      handleStravaCallback(code);\n    } else {\n      checkAuth();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (trainingData && athlete) {\n      generateDailyNutrition();\n      generateDailyWorkout();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [seasonType, trainingData?.todaysActivity, upcomingEvents]);\n\n  const handleStravaCallback = async (code) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await stravaService.exchangeToken(code);\n      setIsAuthenticated(true);\n      setAthlete(result.athlete);\n      window.history.replaceState({}, document.title, window.location.pathname);\n      await loadStravaData();\n    } catch (err) {\n      console.error('Error during Strava authentication:', err);\n      setError(`Failed to connect to Strava: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadStravaData = async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      if (!athlete) {\n        const athleteData = await stravaService.getAthlete();\n        setAthlete(athleteData);\n      }\n\n      const recentActivities = await stravaService.getActivities(1, 30);\n      const processedActivities = processStravaActivities(recentActivities);\n      setActivities(processedActivities);\n\n      const weeklyTSS = calculateWeeklyTSS(processedActivities);\n      const currentPhase = analyzeTrainingPhase(processedActivities);\n      const todaysActivity = processedActivities.find(activity =>\n        activity.date === new Date().toISOString().split('T')[0]\n      ) || processedActivities[0];\n\n      setTrainingData({\n        currentPhase,\n        weeklyTSS,\n        todaysActivity: todaysActivity || {\n          type: 'Rest Day',\n          duration: 0,\n          intensity: 'Rest',\n          tss: 0\n        },\n        upcomingActivities: processedActivities.slice(1, 4)\n      });\n\n      setLastSync(new Date());\n      await generateNutritionPlan();\n    } catch (err) {\n      console.error('Error loading Strava data:', err);\n      setError('Failed to load training data. Please try refreshing.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const generateNutritionPlan = async () => {\n    if (!trainingData || !athlete) return;\n    setGeneratingNutrition(true);\n    try {\n      const userData = { athlete, trainingData, activities, upcomingEvents, preferences: { weight: athlete.weight || 70, age: 35, height: 175, trainingGoal, dietaryRestrictions } };\n      const plan = await nutritionService.generateNutritionPlan(userData);\n      setNutritionPlan(plan);\n    } catch (err) {\n      console.error('Error generating nutrition plan:', err);\n      setNutritionPlan({\n        dailyCalories: 3200,\n        macros: { carbs: { grams: 480, percentage: 60 }, protein: { grams: 160, percentage: 20 }, fat: { grams: 71, percentage: 20 } },\n        hydration: { dailyTarget: 3500 },\n        workoutNutrition: { preWorkout: 'Banana + Coffee (1hr before)', duringWorkout: 'Sports drink (60g carbs/hr)', postWorkout: 'Recovery shake within 30min' }\n      });\n    } finally {\n      setGeneratingNutrition(false);\n    }\n  };\n\n  const generateMealPlan = async () => {\n    if (!nutritionPlan || !trainingData) return;\n    setGeneratingNutrition(true);\n    try {\n      const userData = { athlete, trainingData, activities, preferences: { dietaryRestrictions, cookingSkill: 'Intermediate' } };\n      const weeklyPlan = await nutritionService.generateWeeklyMealPlan(userData, nutritionPlan);\n      setMealPlan(weeklyPlan);\n    } catch (err) {\n      console.error('Error generating meal plan:', err);\n    } finally {\n      setGeneratingNutrition(false);\n    }\n  };\n\n  const generateDailyNutrition = async () => {\n    setGeneratingNutrition(true);\n    try {\n      const currentTrainingData = trainingData || { currentPhase: 'Base', weeklyTSS: 0, todaysActivity: { type: 'Rest Day', duration: 0, intensity: 'Rest', tss: 0 } };\n      const currentAthlete = athlete || { weight: 70, firstname: 'User' };\n\n      const response = {\n        preWorkout: {\n          timing: \"1-2 hours before\",\n          meal: seasonType === 'in-season' ? `Oatmeal with banana and honey, coffee with ${currentTrainingData.todaysActivity.intensity === 'High' ? 'extra carbs' : 'normal prep'}` : \"Light toast with honey and coffee\",\n          rationale: `Given your ${currentTrainingData.todaysActivity.intensity.toLowerCase()} intensity ${currentTrainingData.todaysActivity.type.toLowerCase()} session, you need ${currentTrainingData.todaysActivity.intensity === 'High' ? 'easily digestible carbs for quick energy' : 'moderate fuel to avoid heaviness'}.`\n        },\n        duringWorkout: {\n          timing: \"Every 20-30 minutes during exercise\",\n          fuel: currentTrainingData.todaysActivity.duration > 60 ? \"Sports drink targeting 60g carbs/hour\" : currentTrainingData.todaysActivity.duration > 0 ? \"Water with electrolytes - session duration doesn't require carbs\" : \"Rest day - focus on hydration throughout the day\",\n          rationale: currentTrainingData.todaysActivity.duration > 60 ? `For ${currentTrainingData.todaysActivity.duration}min at ${currentTrainingData.todaysActivity.intensity.toLowerCase()} intensity, you need carb replenishment to maintain power.` : currentTrainingData.todaysActivity.duration > 0 ? `For ${currentTrainingData.todaysActivity.duration}min session, focus on hydration and electrolyte balance.` : \"Rest day allows focus on overall hydration and recovery nutrition.\"\n        },\n        postWorkout: {\n          timing: \"Within 30 minutes\",\n          meal: currentTrainingData.todaysActivity.tss > 70 ? \"Protein shake with extra carbs + fruit\" : currentTrainingData.todaysActivity.tss > 0 ? \"Protein shake with moderate carbs + fruit\" : \"Focus on balanced meals throughout the day\",\n          rationale: currentTrainingData.todaysActivity.tss > 70 ? `With TSS ${currentTrainingData.todaysActivity.tss}, prioritize glycogen replenishment and protein synthesis.` : currentTrainingData.todaysActivity.tss > 0 ? `With TSS ${currentTrainingData.todaysActivity.tss}, focus on protein for recovery without excess calories.` : \"Rest day nutrition focuses on steady nutrient intake and recovery preparation.\"\n        },\n        dinnerSuggestion: {\n          meal: seasonType === 'in-season' ? `Lean protein (salmon/chicken), quinoa, roasted vegetables - sized for ${currentTrainingData.currentPhase} phase` : \"Balanced meal with emphasis on anti-inflammatory foods\",\n          rationale: `Supporting ${currentTrainingData.currentPhase} training phase while maintaining consistency for ${upcomingEvents.length > 0 ? 'upcoming events' : 'general fitness'}.`\n        },\n        hydrationGoal: `${Math.round(35 * (currentAthlete.weight || 70))}ml base + ${Math.round(currentTrainingData.todaysActivity.duration * 8)}ml during training`,\n        racePrep: upcomingEvents.length > 0 ? `With ${upcomingEvents[0]?.name} in ${upcomingEvents[0]?.weeksOut} weeks, ${upcomingEvents[0]?.weeksOut <= 3 ? 'lock in race nutrition - no experiments' : 'good time to test race-day nutrition strategies'}.` : \"No upcoming events - focus on consistent daily nutrition habits\"\n      };\n\n      setDailyNutrition(response);\n    } catch (err) {\n      console.error('Error generating daily nutrition:', err);\n    } finally {\n      setGeneratingNutrition(false);\n    }\n  };\n\n  const generateDailyWorkout = async () => {\n    setGeneratingNutrition(true);\n    try {\n      const currentActivities = activities.length > 0 ? activities : [];\n      const currentTrainingData = trainingData || { currentPhase: 'Base', weeklyTSS: 0, todaysActivity: { type: 'Base Endurance', duration: 45, intensity: 'Moderate', tss: 35 } };\n\n      const response = {\n        workoutType: determineWorkoutType(currentActivities, seasonType),\n        primaryFocus: getPrimaryFocus(upcomingEvents),\n        warmup: {\n          duration: \"15 minutes\",\n          description: seasonType === 'in-season' ? \"Dynamic warm-up with sport-specific movements, gradually increasing intensity\" : \"Easy 15min with 4x30sec pickups in final 5min\"\n        },\n        mainSet: getMainWorkout(currentActivities, seasonType, upcomingEvents),\n        cooldown: { duration: \"10-15 minutes\", description: \"Easy spin/walk with 5min of stretching focus on hip flexors and calves\" },\n        alternatives: [\"If feeling fatigued: Convert to easy recovery session\", seasonType === 'in-season' ? \"If race week: Reduce intensity by 20%\" : \"If time-crunched: Focus on main set only\"],\n        rpe: calculateTargetRPE(currentActivities, seasonType),\n        rationale: getWorkoutRationale(currentActivities, upcomingEvents, currentTrainingData)\n      };\n\n      setDailyWorkout(response);\n    } catch (err) {\n      console.error('Error generating daily workout:', err);\n    } finally {\n      setGeneratingNutrition(false);\n    }\n  };\n\n  const handleConnectStrava = () => { window.location.href = stravaService.getAuthUrl(); };\n  const handleDisconnectStrava = () => {\n    stravaService.logout();\n    setIsAuthenticated(false);\n    setAthlete(null);\n    setActivities([]);\n    setTrainingData(null);\n    setNutritionPlan(null);\n    setMealPlan(null);\n    setTrainingGoal('Endurance Performance');\n    setDietaryRestrictions('');\n  };\n\n  const handleRefresh = async () => { if (isAuthenticated) await loadStravaData(); };\n  const handleRegenerateNutrition = async () => { await generateNutritionPlan(); };\n\n  const handleTrainingGoalChange = async (newGoal) => {\n    setTrainingGoal(newGoal);\n    if (trainingData && athlete) {\n      setGeneratingNutrition(true);\n      setTimeout(async () => { await generateNutritionPlan(); setGeneratingNutrition(false); }, 500);\n    }\n  };\n\n  const handleDietaryRestrictionsChange = async (restrictions) => {\n    setDietaryRestrictions(restrictions);\n    if (trainingData && athlete && nutritionPlan) await generateNutritionPlan();\n  };\n\n  const clearAllEvents = () => { setUpcomingEvents([]); localStorage.removeItem('upcoming_events'); };\n\n  const addEvent = (event) => {\n    setUpcomingEvents(prev => [...prev, event].sort((a,b)=>a.weeksOut-b.weeksOut));\n    if (trainingData && athlete) { generateDailyNutrition(); generateDailyWorkout(); }\n  };\n\n  return (\n    <ErrorBoundary>\n      <div className=\"min-h-screen bg-gray-50\">\n        <header className=\"bg-white shadow-sm border-b border-gray-200\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex justify-between items-center py-4\">\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"bg-blue-500 w-10 h-10 rounded-lg flex items-center justify-center\">\n                    <Activity className=\"h-6 w-6 text-white\" />\n                  </div>\n                  <div>\n                    <h1 className=\"text-2xl font-bold text-gray-900\">TrainFuel</h1>\n                    <p className=\"text-sm text-gray-600\">AI-Powered Sports Nutrition</p>\n                  </div>\n                </div>\n                {isAuthenticated && athlete && (\n                  <div className=\"hidden sm:block text-sm\">\n                    <p className=\"text-gray-600\">Welcome back, <span className=\"font-medium text-gray-900\">{athlete.firstname}</span></p>\n                    <p className=\"text-xs text-gray-500\">Last sync: {lastSync.toLocaleTimeString()}</p>\n                  </div>\n                )}\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                {isAuthenticated && (\n                  <button onClick={handleRefresh} disabled={loading} className=\"flex items-center space-x-2 text-gray-600 hover:text-gray-900 px-3 py-2 rounded-lg hover:bg-gray-100\">\n                    <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />\n                    <span className=\"text-sm\">{loading ? 'Syncing...' : 'Sync Data'}</span>\n                  </button>\n                )}\n                <button className=\"flex items-center space-x-2 bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors\">\n                  <Download className=\"h-4 w-4\" />\n                  <span>Export Plan</span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </header>\n\n        <nav className=\"bg-white border-b border-gray-200\">\n          <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex space-x-8\">\n              {[ { id: 'dashboard', label: 'Dashboard', icon: Activity }, { id: 'calendar', label: 'Activities', icon: Calendar }, { id: 'settings', label: 'Settings', icon: Activity } ].map(({ id, label, icon: Icon }) => (\n                <button key={id} onClick={()=>setActiveTab(id)} className={`flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm ${activeTab===id ? 'border-blue-500 text-blue-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`}>\n                  <Icon className=\"h-4 w-4\" /><span>{label}</span>\n                </button>\n              ))}\n            </div>\n          </div>\n        </nav>\n\n        <main className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:px-8\">\n          {!isAuthenticated && <StravaAuth onConnect={handleConnectStrava} loading={loading} error={error} />}\n          {activeTab === 'dashboard' && (\n            <DashboardView\n              isAuthenticated={isAuthenticated} loading={loading} trainingData={trainingData}\n              nutritionPlan={nutritionPlan} dailyNutrition={dailyNutrition} dailyWorkout={dailyWorkout}\n              generatingNutrition={generatingNutrition} handleGenerateNutrition={generateDailyNutrition}\n              handleGenerateWorkout={generateDailyWorkout} upcomingEvents={upcomingEvents} setShowAddEventModal={setShowAddEventModal}\n            />\n          )}\n          {activeTab === 'calendar' && <CalendarView isAuthenticated={isAuthenticated} activities={activities} />}\n          {activeTab === 'settings' && (\n            <SettingsView isAuthenticated={isAuthenticated} athlete={athlete} trainingGoal={trainingGoal} onTrainingGoalChange={handleTrainingGoalChange}\n              dietaryRestrictions={dietaryRestrictions} onDietaryRestrictionsChange={handleDietaryRestrictionsChange} seasonType={seasonType} onSeasonTypeChange={setSeasonType}\n              lastSync={lastSync} upcomingEvents={upcomingEvents} onClearAllEvents={clearAllEvents} onRefresh={handleRefresh}\n            />\n          )}\n\n          <AddEventModal show={showAddEventModal} onClose={()=>setShowAddEventModal(false)} onAddEvent={addEvent} minDate={new Date().toISOString().split('T')[0]} />\n        </main>\n      </div>\n    </ErrorBoundary>\n  );\n};\n\nApp.propTypes = {};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}